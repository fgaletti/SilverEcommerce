{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/nav_test/nav_test.component.css","webpack:///./src/app/nav_test/nav_test.component.html","webpack:///./src/app/nav_test/nav_test.component.ts","webpack:///./src/app/products/product-create/product-create.component.css","webpack:///./src/app/products/product-create/product-create.component.html","webpack:///./src/app/products/product-create/product-create.component.ts","webpack:///./src/app/products/product-detail/product-detail.component.css","webpack:///./src/app/products/product-detail/product-detail.component.html","webpack:///./src/app/products/product-detail/product-detail.component.ts","webpack:///./src/app/products/product-edit/product-edit.component.css","webpack:///./src/app/products/product-edit/product-edit.component.html","webpack:///./src/app/products/product-edit/product-edit.component.ts","webpack:///./src/app/products/product-list-edit/product-list-edit.component.css","webpack:///./src/app/products/product-list-edit/product-list-edit.component.html","webpack:///./src/app/products/product-list-edit/product-list-edit.component.ts","webpack:///./src/app/products/product-list/product-list.component.css","webpack:///./src/app/products/product-list/product-list.component.html","webpack:///./src/app/products/product-list/product-list.component.ts","webpack:///./src/app/register/register.component.css","webpack:///./src/app/register/register.component.html","webpack:///./src/app/register/register.component.ts","webpack:///./src/app/routes.ts","webpack:///./src/app/services/alertify.service.ts","webpack:///./src/app/services/category.service.ts","webpack:///./src/app/services/error.interceptor.ts","webpack:///./src/app/services/product.service.ts","webpack:///./src/app/services/user.service.ts","webpack:///./src/app/value/value.component.css","webpack:///./src/app/value/value.component.html","webpack:///./src/app/value/value.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \":root {\\n    --main-bg-color: coral;  \\n  }\\n  \\n  \\n \"","module.exports = \"<!--The content below is only a placeholder and can be replaced.-->\\n\\n\\n\\n\\n<app-nav></app-nav>\\n<router-outlet></router-outlet>\\n\\n<!--app-register></app-register-->\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\nimport { JwtModule } from '@auth0/angular-jwt';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FileUploadModule } from 'ng2-file-upload';\n\n\n\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ValueComponent } from './value/value.component';\nimport { AlertifyService } from './services/alertify.service';\nimport { UserService } from './services/user.service';\n\nimport { RouterModule } from '@angular/router';\nimport { appRoutes } from './routes';\nimport { HomeComponent } from './home/home.component';\nimport { ProductListComponent } from './products/product-list/product-list.component';\nimport { LoginComponent } from './login/login.component';\nimport { ErrorInterceptorProvider } from './services/error.interceptor';\nimport { ProductCreateComponent } from './products/product-create/product-create.component';\nimport { Nav_testComponent } from './nav_test/nav_test.component';\nimport { CategoryService } from './services/category.service';\nimport { ProductDetailComponent } from './products/product-detail/product-detail.component';\nimport { ProductEditComponent } from './products/product-edit/product-edit.component';\nimport { ProductListEditComponent } from './products/product-list-edit/product-list-edit.component';\n\nexport function tokenGetter() {\n   return localStorage.getItem('token');\n }\n\n@NgModule({\n   declarations: [\n      AppComponent,\n      NavComponent,\n      RegisterComponent,\n      ValueComponent,\n      HomeComponent,\n      ProductListComponent,\n      LoginComponent,\n      ProductCreateComponent, Nav_testComponent,\n      ProductDetailComponent,\n      ProductEditComponent,\n      ProductListEditComponent /* list of products, edit */\n   ],\n   imports: [\n      NgbModule.forRoot(),\n      RouterModule.forRoot(appRoutes),\n      BrowserModule,\n      HttpClientModule,\n      FormsModule,\n      ReactiveFormsModule,\n      FileUploadModule,\n      JwtModule.forRoot({\n         config: {\n            tokenGetter: tokenGetter,\n            whitelistedDomains: ['localhost:5000'],\n            blacklistedRoutes: ['localhost:5000/api/auth']\n          }\n         }) // token\n   ],\n   providers: [\n      AlertifyService,\n      UserService,\n      ErrorInterceptorProvider,\n      ],\n   bootstrap: [\n      AppComponent\n   ]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  home works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container \\\">\\n    <div class=\\\"row justify-content-center text-center \\\">\\n      <div class=\\\"col col-sm-6 justify-content-center py-5\\\">Login</div>\\n    </div>\\n    <div class=\\\"row justify-content-center  row-register2\\\">\\n        <div class=\\\"col col-sm-10  col-md-8  col-lg-6 justify-content-center\\\">\\n\\n           <form class=\\\"container\\\" [formGroup]=\\\"loginForm\\\" (ngSubmit)=\\\"login()\\\">\\n           \\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"email\\\">Email address</label>\\n                <input formControlName=\\\"email\\\" \\n                [ngClass]=\\\"{'is-invalid': loginForm.get('email').errors && loginForm.get('email').touched}\\\" \\n                 type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" placeholder=\\\"name@example.com\\\">\\n                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"loginForm.get('email').touched && loginForm.get('email').hasError('required')\\\">Email is requiered</div>\\n\\n            </div>\\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"password\\\">Password</label>\\n                  <input formControlName=\\\"password\\\" \\n                  [ngClass]=\\\"{'is-invalid': loginForm.get('password').errors\\n                  && loginForm.get('password').touched}\\\"\\n                   type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" >\\n\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"loginForm.get('password').hasError('required')\\n      && loginForm.get('password').touched\\\">Password is required</div>\\n\\n                </div>\\n              \\n                <div class=\\\"form-group\\\">\\n                   <span>By clicking Create Account, you acknowledge you have read and agreed to our Terms of Use and Privacy Policy. </span>  \\n                </div>\\n                <div class=\\\" text-center\\\">  \\n                     <button class=\\\"btn btn-success\\\" [disabled]=\\\"!loginForm.valid\\\" type=\\\"submit\\\">Login</button>\\n                    <!--button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Create Account</button>-->\\n                </div>\\n          </form>\\n        </div>\\n       \\n    </div>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AlertifyService } from '../services/alertify.service';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { UserService } from '../services/user.service';\nimport { Router } from '@angular/router';\nimport { User } from '../_models/user';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  model: any = {};\n\n  user: User;\n  loginForm: FormGroup;\n\n  constructor( private alertify: AlertifyService,\n    private fb: FormBuilder , private userService: UserService,  private router: Router) { }\n\n  ngOnInit() {\n    this.createLoginForm();\n  }\n\n  createLoginForm() {\n    this.loginForm = this.fb.group({\n      email: ['', Validators.required],\n      password: ['', [Validators.required]]\n    });\n  }\n\n  login() {\n    this.model = Object.assign({}, this.loginForm.value) ;\n    console.log(this.model);\n\n    this.userService.login(this.model).subscribe(next => {\n      this.alertify.success('logged in successfully');\n    // tslint:disable-next-line:no-shadowed-variable\n    }, error => {\n      console.log(error);\n\n       this.alertify.error(error); //  'Failed to login');\n    }, () => {\n      this.router.navigate(['/product-list']);\n    }\n    );\n  }\n\n}\n","module.exports = \"@import url(\\\"https://use.fontawesome.com/releases/v5.8.1/css/all.css\\\");\\n@import url(\\\"https://fonts.googleapis.com/css?family=Calligraffitti|Mali\\\");\\n.nav-color-blue {\\n     background-color: var(--lightblue)!important;\\n     /*background-color: #2A4480; */\\n    /*background-color: #303E60;*/\\n\\n}\\n.nav-color-silver {\\n  background-color: #F9F8F8  ;\\n  /*background-color: #2A4480; */\\n /*background-color: #303E60;*/\\n\\n}\\n.text-green {\\n  color :var(--green)!important;\\n}\\n.text-yellows {\\n    color : var(--mainYellows);\\n  }\\n.text-yellow {\\n    color :var(--mainYellow)!important;\\n  }\\n.text-salmon {\\n    color :var(--salmon);\\n  }\\n.text-white {\\n    color :var(--white)!important;\\n  }\\n.text-charcol {\\n    color :var(--mainCharcol)!important;\\n  }\\n.dropdown-toggle , .dropdown-item{\\n    cursor: pointer;\\n}\\nbody {\\n  color: var(--mainBlack);\\n  background: var(--mainWhite);\\n  font-family: \\\"Mali\\\", cursive;\\n}\\n.text-slanted {\\n  font-family: \\\"Calligraffitti\\\", cursive;\\n}\\n.btn-yellow {\\n  background: var(--mainYellow);\\n  text-transform: capitalize;\\n  font-size: 1.2rem;\\n  color: var(--mainBlack);\\n  border-radius: 0!important; /* sharp edged */\\n}\\n.btn-yellow:hover {\\n  background: var(--mainBlack);\\n  color: var(--mainYellow);\\n\\n}\\n.btn-blue {\\n  border-color:  var(--lightblue) !important;\\n  text-transform: capitalize;\\n  font-size: 1.2rem;\\n  color: var(--lightblue)!important;\\n  border-radius: 0!important; /* sharp edged */\\n}\\n.btn-blue:hover {\\n  background: var(--lightblue)!important;\\n  color: var(--white)!important;\\n\\n}\\n/*navbar*/\\n.navbar-toggler {\\n  outline: none !important;\\n  border: none;\\n  font-size: 2.2rem;\\n  color: #fdbe02!important; /* var(--mainYellow)!important;*/\\n}\\n/*deactivated*/\\n.nav-link {\\n  font-size: 1rem;\\n  border-bottom: 0.1rem solid var(--mainWhite);\\n}\\n/*activated*/\\n.nav-active {\\n  font-size: 1.6rem;\\n  border-bottom: 0.1rem solid var(--mainYellow);\\n}\\n.navbar-icon {\\n  font-size: 1.6rem;\\n}\\n.navbar-cart-icon {\\n  font-size: 1.6rem;\\n  color: var(--mainBlack);\\n  position: relative;  /*  this is important as parent  */\\n}\\n.navbar-cart-icon:hover {\\n  color: var(--mainGrey);\\n}\\n.cart-items {\\n  color: var(--mainWhite);\\n  position: absolute;\\n  top: -15%;\\n  right: -25%;\\n  padding: 0.2rem 0.3rem;\\n  background: var(--mainYellow);\\n  font-size: 0.1rem;\\n  border-radius: 50%;\\n}\\n/*banner*/\\n.banner {\\n  min-height: calc(100vh - 101px); /*view hight value*/\\n  background-position: center;\\n  background-size: cover;\\n  background-attachment: fixed; /*paralex effect , image fixed*/\\n  background-repeat: no-repeat;\\n}\\n/*FEATURED SECTION*/\\n.old-price {\\n  text-decoration: line-through;\\n}\\n.featured-container {\\n  background: var(--TransGrey);\\n  position: relative; /* allows to put elements un positions*/\\n  overflow: hidden; /* hide the element when its beyond the margin (container)*/\\n}\\n.featured-search-icon {\\n  background: var(--mainWhite);\\n  padding: 0.2rem 0.4rem;\\n  display: inline-block;\\n  position: absolute;\\n  right: 0%;\\n  top: 50%;  /*this works because container is set to relative*/\\n  font-size: 1.2rem;\\n  -webkit-transform: translateX(110%);\\n          transform: translateX(110%);\\n  transition: all 1s ease-in-out;\\n  cursor: pointer;\\n\\n}\\n.featured-container:hover .featured-search-icon{\\n  -webkit-transform: translateX(0%);\\n          transform: translateX(0%);\\n}\\n.featured-store-link {\\n  background: var(--mainYellow);\\n  color: var(--mainBlack);\\n  padding: 0.2rem 0.4rem;\\n  display: inline-block;\\n\\n  position: absolute;\\n  right: 0%;\\n  top: 70%;  /*this works because container is set to relative*/\\n\\n  -webkit-transform: translateX(110%);\\n\\n          transform: translateX(110%);\\n  transition: all 1s ease-in-out;\\n}\\n.featured-container:hover .featured-store-link{\\n  -webkit-transform: translateX(0%);\\n          transform: translateX(0%);\\n}\"","module.exports = \"\\n<link rel=\\\"stylesheet\\\" href=\\\"https://use.fontawesome.com/releases/v5.8.1/css/all.css\\\" integrity=\\\"sha384-50oBUHEmvpQ+1lW4y57PTFmhCaXp0ML5d60M1M7uH2+nqUivzIebhndOJK28anvf\\\" crossorigin=\\\"anonymous\\\">\\n\\n\\n\\n <!-- As a heading -->\\n    <div class=\\\"container-fluid  \\\">\\n      <div class=\\\"row justify-content-center text-center\\\">\\n        <div class=\\\"col col-sm-12 justify-content-center text-charcol nav-color-blue \\\">\\n         <h3 class=\\\"text-white mt-1\\\">Welcome</h3>  \\n        </div>\\n      </div>\\n    </div>\\n\\n  <!-- As a link -->\\n  <nav class=\\\"navbar navbar-expand-md  navbar-light navbar1 nav-color-silver \\\">\\n      <div class=\\\"container\\\">\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\"> \\n        <img src=\\\"../../assets/logo_silver.png\\\" height=\\\"30px\\\" width=\\\"30px\\\" ></a>\\n        \\n        <!---button-- class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarMain\\\" aria-controls=\\\"navbarsExampleDefault\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n            <span class=\\\"navbar-toggler-icon\\\"></span>\\n          </button-->\\n                         \\n          <button class=\\\"navbar-toggler \\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarMain\\\" (click)=\\\"navbarCollapsed = !navbarCollapsed\\\" [attr.aria-expanded]=\\\"!navbarCollapsed\\\">\\n              <i class=\\\"fas fa-bars\\\"></i>\\n            </button> \\n        <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarMain\\\" [ngbCollapse]=\\\"navbarCollapsed\\\">\\n            <a class=\\\"navbar-brand text-charcol\\\" [routerLink]=\\\"['/product-list']\\\">Silver</a>\\n            \\n            <form class=\\\"form-inline my-2 my-lg-0 mx-auto\\\">\\n                <input class=\\\"form-control mr-sm-2\\\" type=\\\"search\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">\\n                <button class=\\\"btn  my-2 my-sm-0 btn-blue \\\" type=\\\"submit\\\">Search</button>\\n\\n              </form>\\n                \\n             \\n            <ul  class=\\\"navbar-nav ml-auto mt-2 mt-lg-0\\\">\\n\\n              <li *ngIf=\\\"loggedIn()\\\" class=\\\"nav-item active\\\">\\n                <a class=\\\"nav-link text-charcol\\\" [routerLink]=\\\"['/home']\\\"> <i class=\\\"fas fa-user-alt\\\"></i> My Account     <span class=\\\"sr-only\\\">(current)</span></a>\\n              </li>\\n             \\n              <li  *ngIf=\\\"!loggedIn()\\\" class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link text-charcol \\\" [routerLink]=\\\"['/login']\\\"> <i class=\\\"fas fa-sign-in-alt mr-1\\\"></i>Login</a>\\n              </li>\\n              <li *ngIf=\\\"!loggedIn()\\\" class=\\\"nav-item\\\">\\n                <a class=\\\"nav-link text-charcol \\\" [routerLink]=\\\"['/register']\\\"><i class=\\\"fas fa-user-plus mr-1\\\"></i>  Register</a>\\n              </li>\\n              <li *ngIf=\\\"loggedIn()\\\" class=\\\"nav-item\\\">\\n                  <a class=\\\"nav-link text-charcol\\\" (click)=\\\"logout()\\\"> <i class=\\\"fas fa-sign-out-alt\\\"></i>Logout</a>\\n                </li>\\n                \\n               \\n            </ul>\\n           \\n          \\n\\n              <!-- class=\\\"dropdown-menu mt-3\\\"  <-- does not work with ng-bootstrap -->  \\n              <div *ngIf=\\\"loggedAsAdmin()\\\" ngbDropdown class=\\\"d-inline-block  mt-2 mt-lg-0 \\\">   <!--   mt-2 mt-lg-0 : must be the same as <ul  class   -->\\n                  <a class=\\\"dropdown-toggle text-charcol\\\" id=\\\"dropdownBasic1\\\" ngbDropdownToggle> <i class=\\\"fas fa-warehouse\\\"></i> Products</a>\\n                  <div ngbDropdownMenu aria-labelledby=\\\"dropdownBasic1\\\">\\n                    <button ngbDropdownItem [routerLink]=\\\"['product-create']\\\">Create</button>\\n                    <button ngbDropdownItem [routerLink]=\\\"['product-list-edit']\\\">List Products</button>\\n                   \\n                  </div>\\n                </div>\\n\\n          </div>\\n\\n        </div>\\n    </nav>\\n  \\n    <!--nav class=\\\"navbar navbar-light bg-light\\\">\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Navbar2</a>\\n      </nav>\\n      <nav-- class=\\\"navbar navbar-light bg-light\\\">\\n          <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Navbar3</a>\\n        </nav-->\\n\\n\\n\\n    \\n      <!--nav class=\\\"navbar navbar-expand-md navbar-dark fixed-top bg-dark\\\"-->\\n     \\n<!--nav class=\\\"navbar navbar-expand-md navbar-dark  bg-dark\\\">\\n  \\n\\n\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Navbar</a>\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarsExampleDefault\\\" aria-controls=\\\"navbarsExampleDefault\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n      <li class=\\\"nav-item active\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Home <span class=\\\"sr-only\\\">(current)</span></a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link\\\" href=\\\"#\\\">Link</a>\\n      </li>\\n      <li class=\\\"nav-item\\\">\\n        <a class=\\\"nav-link disabled\\\" href=\\\"#\\\">Disabled</a>\\n      </li>\\n      <li class=\\\"nav-item dropdown\\\">\\n        <a class=\\\"nav-link dropdown-toggle\\\" href=\\\"http://example.com\\\" id=\\\"dropdown01\\\" data-toggle=\\\"dropdown\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">Dropdown</a>\\n        <div class=\\\"dropdown-menu\\\" aria-labelledby=\\\"dropdown01\\\">\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Action</a>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Another action</a>\\n          <a class=\\\"dropdown-item\\\" href=\\\"#\\\">Something else here</a>\\n        </div>\\n      </li>\\n    </ul>\\n    <form class=\\\"form-inline my-2 my-lg-0\\\">\\n      <input class=\\\"form-control mr-sm-2\\\" type=\\\"text\\\" placeholder=\\\"Search\\\" aria-label=\\\"Search\\\">\\n      <button class=\\\"btn btn-outline-success my-2 my-sm-0\\\" type=\\\"submit\\\">Search</button>\\n    </form>\\n  </div>\\n</nav> \\n\\n-->\\n\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AlertifyService } from '../services/alertify.service';\nimport { Router } from '@angular/router';\nimport { UserService } from '../services/user.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css', '../../../node_modules/bootstrap/dist/css/bootstrap.css']\n})\nexport class NavComponent implements OnInit {\n    public navbarCollapsed = true;\n\n  constructor(private alertify: AlertifyService, private userService: UserService,\n    private router: Router) { }\n    photoUrl: string;\n\n  ngOnInit() {\n  }\n\n  loggedIn() {\n    // if token is not expired the user is logged in\n    return this.userService.loggedIn();\n  }\n\n  loggedAsAdmin() {\n    return this.userService.loggedAsAdmin();\n  }\n\n  logout() {\n    // remove the variables in the localStorage\n    localStorage.removeItem('token');\n    localStorage.removeItem('user'); // 114\n    // this.authService.decodedToken = null;\n    // this.authService.currentUser = null;\n    this.alertify.message('logged out');\n    this.router.navigate(['/home']);\n  }\n\n}\n","module.exports = \":root {\\n    --primary-color: #fff; \\n    --background-color: #fdbe02; \\n    --text-color: #2d2d2d;\\n    --mainYellow: #fdbe02;\\n    --mainWhite: #fff;\\n  }\\n\\n  .test_span {\\n    color: var(--main-bg-color) !important; \\n  }\\n\\n  .testwhite {\\n    color: var(--mainWhite ) !important; \\n  }\\n\\n  /* GENERAL STYLES */\\n\\n  /*:root {\\n    --mainYellow: #fdbe02;\\n    --mainWhite: #fff;\\n    --mainBlack: #071013;\\n    --mainGrey: #9b9999;\\n    --mainBlue: #2A4480;\\n    --TransGrey: rgba(0, 0, 0, 0.1);\\n  }*/\\n\\n  .navbar-toggler {\\n    outline: none !important;\\n    border: none;\\n    font-size: 2.2rem;\\n     color: var(--mainYellow)!important; \\n}\\n\\n  .navbar-toggler2 {\\n\\n    color: #fdbe02 !important;;\\n}\\n\\n\"","module.exports = \"\\n<span id=\\\"test_ss\\\" class=\\\"test_span \\\"> \\n   TEST SPAN\\n</span>\\n\\n<span id=\\\"test_s\\\" class=\\\" testwhite \\\"> \\n    TEST SPAN\\n </span>\\n\\n  <!--navbar-->\\n  <nav class=\\\"navbar navbar-expand-lg navbar-light\\\">\\n      <a href=\\\"index.html\\\" class=\\\"navbar-brand\\\">\\n      <img src=\\\"img/logo.png\\\"  alt=\\\"logo\\\">\\n    </a>\\n       <!--navbar-toggler  : only dysplaied when the width is small-->\\n      <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#myNavbar\\\"  (click)=\\\"navbarCollapsed = !navbarCollapsed\\\" [attr.aria-expanded]=\\\"!navbarCollapsed\\\" >\\n        <i class=\\\"fas fa-bars\\\"></i>\\n      </button>\\n      <div class=\\\"collapse navbar-collapse\\\"  [ngbCollapse]=\\\"navbarCollapsed\\\" id=\\\"myNavbar\\\">\\n        <ul class=\\\"navbar-nav mx-auto\\\">\\n           <!--nav-active is going to change depending on the page we are working on -->\\n          <li class=\\\"nav-item mx-2 nav-active\\\">\\n            <a href=\\\"\\\" class=\\\"nav-link test_span\\\" >Home</a>\\n          </li>\\n          <li class=\\\"nav-item mx-2 \\\">\\n              <a href=\\\"products.html\\\" class=\\\"nav-link\\\" >Products</a>\\n          </li>\\n          <li class=\\\"nav-item mx-2 \\\">\\n              <a href=\\\"singleproduct.html\\\" class=\\\"nav-link\\\" >Single Product</a>\\n            </li>\\n            <li class=\\\"nav-item mx-2 \\\">\\n                <a href=\\\"store.html\\\" class=\\\"nav-link\\\" >Store</a>\\n              </li>  \\n        </ul>\\n      </div>\\n       <!--icons-->\\n      <div class=\\\"navbar-icons d-none d-lg-flex\\\">\\n        <div class=\\\"navbar-icon mx-2\\\">\\n          <i class=\\\"fas fa-search\\\"></i>\\n        </div>\\n        <a href=\\\"store.html\\\" class=\\\"navbar-icon mx-2 navbar-cart-icon\\\"> \\n          <i class=\\\"fas fa-shopping-cart\\\"></i> \\n          <div class=\\\"cart-items\\\">10</div>\\n        </a>\\n      </div>\\n      <!--end icons-->\\n  \\n    </nav>\\n    <!--end navbar-->\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-test',\n  templateUrl: './nav_test.component.html',\n  styleUrls: ['./nav_test.component.css']\n})\nexport class Nav_testComponent implements OnInit {\n\n  public navbarCollapsed = true;\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".container-form {\\n    padding: 1em 3em 2em 3em;\\n    margin: 0em auto;\\n    background-color: #F9F8F8 ;\\n    border-radius: 3px* 1.4;\\n    box-shadow: 0px 3px 10px -2px rgba(0,0,0,0.2);\\n  }\\n\\n  nav--silver\\n\\n\\n  .text-blue {\\n      color: var(--lightblue)!important;\\n  }\\n\\n  img.img-thumbnail {\\n    height: 190px;\\n    min-width: 190px !important;\\n    margin-bottom: 2px;\\n}\\n\\n  .nv-file-over {\\n    border: dotted 3px red;\\n}\\n\\n  /* hide text NO FILE CHOOSEN */\\n\\n  input[type=file] {\\n    color:transparent;\\n}\\n\\n  .dashed {\\n    border-style: dashed;\\n}\\n\"","module.exports = \"<div class=\\\"container \\\">\\n    <!--div-- class=\\\"row justify-content-center text-center \\\">\\n      <div class=\\\"col col-sm-6 justify-content-center py-5\\\">Create Product</div>\\n    </div-->\\n    <div class=\\\"row justify-content-center  row-register2 mt-4\\\">\\n        <div class=\\\"col col-sm-10  col-md-8  col-lg-6 justify-content-center\\\">\\n\\n           <form class=\\\"container container-form\\\" [formGroup]=\\\"productForm\\\"  (ngSubmit)=\\\"createProduct()\\\">\\n              \\n              <div class=\\\"form-group\\\">   \\n                  <h4 class=\\\"text-blue\\\"> Create</h4>   \\n              </div>\\n              <div class=\\\"form-group\\\">              \\n                    <label for=\\\"name\\\" class=\\\"form-label\\\"> Name</label>\\n                     <input  \\n                     formControlName=\\\"name\\\" \\n                     [ngClass]=\\\"{'is-invalid': productForm.get('name').errors && productForm.get('name').touched}\\\" \\n                     type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" placeholder=\\\"nameProduct\\\" >\\n\\n\\n                     <div class=\\\"invalid-feedback\\\" *ngIf=\\\"productForm.get('name').touched && productForm.get('name').hasError('required')\\\">name of product is requiered</div>\\n              </div>\\n            <div class=\\\"form-group\\\">\\n                  <label for=\\\"description\\\"> Description</label>\\n                  <input  formControlName=\\\"description\\\" \\n                  [ngClass]=\\\"{'is-invalid': productForm.get('description').errors && productForm.get('description').touched}\\\" \\n                   type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"description\\\" placeholder=\\\"Description\\\">\\n                \\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"productForm.get('description').touched && productForm.get('description').hasError('required')\\\">Description is requiered</div>\\n\\n                </div>\\n               <div class=\\\"form-group\\\">\\n                    <label for=\\\"price\\\">Price</label>\\n                    <input  formControlName=\\\"price\\\"  (keypress)=\\\"onlyDecimalNumberKey($event)\\\"\\n                    [ngClass]=\\\"{'is-invalid': productForm.get('price').errors && productForm.get('price').touched}\\\" \\n                     type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"price\\\" placeholder=\\\"\\\">\\n                  \\n                    <div class=\\\"invalid-feedback\\\" *ngIf=\\\"productForm.get('price').touched && productForm.get('price').hasError('required')\\\"> Price is requiered</div>\\n  \\n               </div>  \\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"sku\\\">SKU</label>\\n                <input formControlName=\\\"sku\\\" \\n                [ngClass]=\\\"{'is-invalid': productForm.get('sku').errors && productForm.get('sku').touched}\\\" \\n                 type=\\\"sku\\\" class=\\\"form-control\\\" id=\\\"sku\\\" placeholder=\\\"sku\\\">\\n                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"productForm.get('sku').touched && productForm.get('sku').hasError('required')\\\">Sku is requiered</div>\\n\\n             </div>\\n\\n             <div>\\n                    <label>Category: </label>\\n                    <select (change)=\\\"selectCategoryClick($event.target.value)\\\">\\n                        <option value=\\\"0\\\">--Select Category--</option>\\n                        <option *ngFor=\\\"let category of listCategories\\\" value={{category.id}}>\\n                            {{category.name}}\\n                        </option>\\n                    </select>\\n                </div>\\n              \\n            <div class=\\\"form-check\\\">\\n                <label for=\\\"isActive\\\"   class=\\\"form-check-label\\\">\\n                  <input type=\\\"checkbox\\\" formControlName=\\\"isActive\\\" class=\\\"form-check-input\\\" id=\\\"isActive\\\" value= \\\"true\\\">Is Active\\n                </label>\\n              </div>\\n               \\n               <!-- file uploader    -->\\n               \\n          <div class=\\\"row mt-3 mb-4 dashed \\\">\\n          \\n            <div class=\\\"col col-sm-12 col-md-12  text-center\\\">\\n\\n                <h5>Add Image</h5>\\n\\n                <!--div ng2FileDrop\\n                    [ngClass]=\\\"{'nv-file-over': hasBaseDropZoneOver}\\\"\\n                    (fileOver)=\\\"fileOverBase($event)\\\"\\n                    [uploader]=\\\"uploader\\\"\\n                    class=\\\"card bg-faded p-3 text-center mb-3 my-drop-zone\\\">\\n                    <i class=\\\"fa fa-upload fa-3x\\\"></i>\\n                    Drop Photos Here\\n                </div -->\\n\\n\\n                <!-- show image-->\\n\\n                    \\n                  <img  *ngIf=\\\"imageLoaded\\\" class=\\\"img-thumbnail mb-2\\\" src=\\\"{{ productImageUrl}}\\\" alt=\\\"img-thumbnail p-1\\\" alt=\\\"\\\">                     \\n                \\n                <input type=\\\"file\\\" ng2FileSelect [uploader]=\\\"uploader\\\" (change)=\\\"onFileSelected($event)\\\" #fileInput />\\n                <button *ngIf=\\\"imageLoaded\\\" type=\\\"button\\\" class=\\\"btn btn-danger btn-s\\\"\\n                          (click)=\\\"uploader.clearQueue(); deleteImage();\\\" >\\n                      <span class=\\\"fa fa-trash\\\"></span> Remove \\n                  </button>    \\n            </div>\\n\\n       \\n\\n          </div>\\n\\n          <!--INICO UPLOAD-->\\n          <div class=\\\"col-md-9\\\" style=\\\"margin-bottom: 40px\\\" *ngIf=\\\"uploader?.queue?.length\\\">\\n              <table class=\\\"table\\\">\\n                  <tbody>\\n                  <tr *ngFor=\\\"let item of uploader.queue\\\">\\n                      <td><strong>{{ item?.file?.name }}</strong></td>\\n                      <td *ngIf=\\\"uploader.options.isHTML5\\\" nowrap>{{ item?.file?.size/1024/1024 | number:'.2' }} MB</td>\\n                  </tr>\\n                  </tbody>\\n              </table>\\n        \\n              <div>\\n                  <div>\\n                      Queue progress:\\n                      <div class=\\\"progress mb-4\\\" >\\n                          <div class=\\\"progress-bar\\\" role=\\\"progressbar\\\" [ngStyle]=\\\"{ 'width': uploader.progress + '%' }\\\"></div>\\n                      </div>\\n                  </div>\\n                  <button type=\\\"button\\\" class=\\\"btn btn-success btn-s\\\"\\n                          (click)=\\\"uploader.uploadAll()\\\" [disabled]=\\\"!uploader.getNotUploadedItems().length\\\">\\n                      <span class=\\\"fa fa-upload\\\"></span> Upload \\n                  </button>\\n                 \\n                  <button type=\\\"button\\\" class=\\\"btn btn-danger btn-s\\\"\\n                          (click)=\\\"uploader.clearQueue()\\\" [disabled]=\\\"!uploader.queue.length\\\">\\n                      <span class=\\\"fa fa-trash\\\"></span> Remove \\n                  </button>\\n              </div>\\n          </div>\\n          <!-- FIN UPLOAD-->\\n                <div class=\\\" text-center\\\">  \\n                     <button class=\\\"btn btn-success\\\" [disabled]=\\\"!productForm.valid\\\" type=\\\"submit\\\">Create Product</button>\\n                    <!--button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Create Account</button>-->\\n                </div>\\n          </form>\\n        </div>\\n       \\n    </div>\\n  </div>\\n\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\n// import { FormGroup, FormBuilder, FormControl, Validators  } from '@angular/forms';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\n\nimport { AlertifyService } from 'src/app/services/alertify.service';\nimport { Router } from '@angular/router';\nimport { ProductService } from 'src/app/services/product.service';\nimport { Product } from 'src/app/_models/product';\nimport { FileUploader } from 'ng2-file-upload';\nimport { environment } from 'src/environments/environment';\n\nimport { CategoryService } from 'src/app/services/category.service';\nimport { Category } from 'src/app/_models/category';\n\n@Component({\n  selector: 'app-product-create',\n  templateUrl: './product-create.component.html',\n  styleUrls: ['./product-create.component.css']\n})\n\n\nexport class ProductCreateComponent implements OnInit {\n\n  productForm: FormGroup;\n  product: Product;\n\n  // add picture\n  uploader: FileUploader;\n  hasBaseDropZoneOver = false;\n  baseUrl = environment.apiUrl;\n  imageLoaded = false; // flag to indicate if the photo has been uploaded into the server\n  productImageUrl = '';\n  @ViewChild('fileInput') fileInput: any;\n\n  listCategories: Category[];\n\n  constructor(private alertify: AlertifyService,\n    private fb: FormBuilder , private categoryService: CategoryService, private productService: ProductService,\n      private router: Router) { }\n\n  ngOnInit() {\n    this.createProductForm();\n    this.initializeUploader();\n    this.getCategoryList();\n  }\n\n\n  getCategoryList() {\n    this.categoryService.getCategoryList().subscribe((categories: Category[]) => {\n      this.listCategories = categories;\n    }, error => {\n      this.alertify.error(error);\n    }\n    );\n  }\n\n  public fileOverBase(e: any): void {\n    this.hasBaseDropZoneOver = e;\n  }\n\n  initializeUploader() {\n      this.uploader = new FileUploader({\n        url: this.baseUrl + 'products/AddImageProduct',\n        // auto  authTokenHeader:  'authorization',\n        authToken: 'Bearer ' + localStorage.getItem('token'),\n        isHTML5: true,\n        allowedFileType: ['image'],\n        removeAfterUpload: true,\n        autoUpload: false,\n        maxFileSize: 10 * 1024 * 1024\n      });\n      this.uploader.onAfterAddingFile = (file) => {\n        console.log('fullle');\n        file.withCredentials = false;\n      };\n\n      this.uploader.onSuccessItem = (item, response, status, headers) => {\n        if (response) {\n          // const res: Photo = JSON.parse(response);\n          // const res = JSON.parse(response);\n          console.log('response');\n          this.imageLoaded = true;\n          this.productImageUrl = 'http://' + response;\n          this.fileInput.nativeElement.value = ''; // clean the fileuploa s that we can add the same file again\n          console.log(response);\n        }\n      };\n  }\n\n  // tslint:disable-next-line:use-life-cycle-interface\n  ngAfterViewInit() {\n    this.uploader.onAfterAddingFile = (item => {\n       item.withCredentials = false;\n    });\n }\n\n  deleteImage() {\n    // delete image added to the product\n    this.imageLoaded = false;\n    this.productImageUrl = '';\n  }\n\n\n  createProductForm() {\n    this.productForm = this.fb.group({\n      name: ['', Validators.required],\n      description: ['', Validators.required],\n      price: ['', [Validators.required, Validators.pattern('^-?[0-9]+(.[0-9]+)?$')]],\n      sku: ['', Validators.required],\n      isActive: [true],\n      avatar: []\n    });\n  }\n\n  createProduct() {\n    this.product = Object.assign({}, this.productForm.value) ; // pass the values\n    this.product.shortDescription = this.product.description;\n    this.product.isActive = this.productForm.get('isActive').value === true ? 1 : 0;\n    this.product.urlImage = this.productImageUrl === '' ? null : this.productImageUrl;\n\n    this.productService.createProduct(this.product).subscribe (\n       () => {\n           this.alertify.success('new product added');\n    }, error => {\n      this.alertify.error(error);\n    }, () => {\n        this.router.navigate(['/product-list']);\n    });\n\n\n    this.alertify.message(this.product.name ) ;\n  }\n\n  getNewIdImage() {\n    // get autonumeric Id from the database so that a new image does not collapse with another image\n    return 1; // should go to a web api\n  }\n\n  onlyDecimalNumberKey(event) {\n    const charCode = (event.which) ? event.which : event.keyCode;\n    if (charCode !== 46 && charCode > 31 && (charCode < 48 || charCode > 57)) {\n          return false;\n       }\n    return true;\n  }\n\n\n  onFileChange(event) {\n    const reader = new FileReader();\n    if (event.target.files && event.target.files.length > 0) {\n      const file = event.target.files[0];\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        this.productForm.get('avatar').setValue({\n          filename: file.name,\n          filetype: file.type,\n          value: reader.result\n        });\n      };\n    }\n  }\n\n  onFileSelected (event) {\n    this.uploader.uploadAll();\n    console.log('uploadAll');\n\n  }\n\n   selectCategoryClick(categoryId: any) {\n      console.log(categoryId);\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  product-detail works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-product-detail',\n  templateUrl: './product-detail.component.html',\n  styleUrls: ['./product-detail.component.css']\n})\nexport class ProductDetailComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<h1>{{title}}</h1>\\n<p>{{product?.id}}</p>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { ProductService } from 'src/app/services/product.service';\nimport { AlertifyService } from 'src/app/services/alertify.service';\nimport { Product } from 'src/app/_models/product';\n\n@Component({\n  selector: 'app-product-edit',\n  templateUrl: './product-edit.component.html',\n  styleUrls: ['./product-edit.component.css']\n})\nexport class ProductEditComponent implements OnInit {\n  product: Product;\n  title = 'Tour of Heroes';\n  constructor(private alertify: AlertifyService, private route: ActivatedRoute, private productService: ProductService) { }\n\n  ngOnInit() {\n    this.loadProduct();\n  }\n\n  // members /4\n   loadProduct() {\n    this.productService.getProduct(this.route.snapshot.params['id']).subscribe((product: Product) => {\n      this.product = product;\n      console.log(this.product.urlImage);\n\n    }, error => {\n      this.alertify.error(error);\n    });\n  }\n}\n","module.exports = \".selected {\\n    background-color: #CFD8DC !important;\\n    color: white;\\n  }\\n  .products {\\n    margin: 0 0 2em 0;\\n    list-style-type: none;\\n    padding: 0;\\n    width: 100%;\\n  }\\n  .products li {\\n    cursor: pointer;\\n    position: relative;\\n    left: 0;\\n    background-color: #EEE;\\n    margin: .5em;\\n    padding: .3em 0;\\n    height: 2.6em;\\n    border-radius: 4px;\\n  }\\n  .products li.selected:hover {\\n    background-color: #BBD8DC !important;\\n    color: white;\\n  }\\n  .products li:hover {\\n    color: #607D8B;\\n    background-color: #DDD;\\n    left: .1em;\\n  }\\n  .products .text {\\n    position: relative;\\n    top: -3px;\\n  }\\n  .products .badge {\\n    display: inline-block;\\n    font-size: small;\\n    color: white;\\n    padding: 0.8em 0.7em 0 0.7em;\\n    background-color:#405061;\\n    line-height: 1em;\\n    position: relative;\\n    left: -1px;\\n    top: -4px;\\n    height: 3.2em;  /* same as li*/\\n    margin-right: .8em;\\n    border-radius: 4px 0 0 4px;\\n  }\"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col col-md-10\\\">\\n        <div class=\\\"h3\\\">List of Products</div>\\n    </div>\\n    <div *ngFor=\\\"let product of listProducts\\\" class=\\\"col-10 text-center\\\"> \\n        {{product.id}} -- {{product.name}}\\n    </div>\\n  </div>\\n</div>\\n\\n<h2>List of Products</h2>\\n<ul class=\\\"products\\\">\\n  <li *ngFor=\\\"let product of listProducts\\\"\\n    [class.selected]=\\\"product === selectedProduct\\\"\\n    (click)=\\\"onSelect(product.id)\\\">\\n    <span class=\\\"badge\\\">{{product.id}}</span> {{product.name}}\\n  </li>\\n</ul>\"","import { Component, OnInit } from '@angular/core';\nimport { Product } from 'src/app/_models/product';\nimport { AlertifyService } from 'src/app/services/alertify.service';\nimport { ProductService } from 'src/app/services/product.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-product-list-edit',\n  templateUrl: './product-list-edit.component.html',\n  styleUrls: ['./product-list-edit.component.css']\n})\nexport class ProductListEditComponent implements OnInit {\n\n  listProducts: Product[];\n\n  constructor(private alertify: AlertifyService, private productService: ProductService,\n    private router: Router) { }\n\n  ngOnInit() {\n    this.getProductList();\n  }\n\n  getProductList () {\n    this.productService.getProductList().subscribe((products: Product[]) => {\n      this.listProducts = products;\n    }, error => {\n      this.alertify.error(error);\n    }\n    );\n  }\n\n  onSelect(productId: number) {\n    this.router.navigate(['/product-edit/' + productId.toString()]);\n  }\n\n}\n","module.exports = \"\\n  .carousel-image  {\\n    height: auto;\\n    width:  100vw;\\n\\n }\\n\\n img22 {\\n    width: 100%;\\n    height: auto;\\n  }\\n\\n .carousel-control-prev-icon {\\n     color:black;\\n     background-image: url('watch.jpeg');\\n     background:url('watch.jpeg');\\n  }\\n\\n .carousel-control-prev  {\\n    color:black;\\n    background-image: url('watch.jpeg');\\n    background:url('watch.jpeg');\\n }\\n\\n .carousel-control-prev-icon,\\n.carousel-control-next-icon {\\n  height: 100px !important;\\n  width: 100px !important;\\n  outline: black !important;\\n  background-size: 100%, 100%;\\n  border-radius: 50%;\\n  border: 1px solid black !important;\\n  background-image: none !important;\\n}\\n\\n .carousel-control-next-icon:after\\n{\\n  content: '>';\\n  font-size: 55px;\\n  color: red;\\n}\\n\\n .carousel-control-prev-icon:after {\\n  content: '<';\\n  font-size: 55px;\\n  color: red;\\n}\\n\\n .height-max{\\n    min-height: calc(100vh - 76px);\\n    background:url('watch.jpeg');\\n    background-position: center;\\n    background-size: cover;\\n    background-attachment: fixed;\\n    background-repeat: no-repeat;\\n    -webkit-animation-name: zoom;\\n            animation-name: zoom;\\n    -webkit-animation-duration: 20s;\\n            animation-duration: 20s;\\n    -webkit-animation-delay: 5s;\\n            animation-delay: 5s;\\n    -webkit-animation-iteration-count: infinite;\\n            animation-iteration-count: infinite;\\n  }\\n\\n .background-products{\\n    background-color: #F9F8F8  ;\\n    /*background-color: #2A4480; */\\n   /*background-color: #303E60;*/\\n  \\n  }\\n\\n .filled {\\n    color: var(--mainYellow)!important;\\n  }\\n\\n .star {\\n    font-size: 1.5rem;\\n    color: #b0c4de;\\n  }\\n\\n .featured-store-link {\\n    background: var(--mainYellow);\\n    color: var(--mainBlack);\\n    padding: 0.2rem 0.4rem;\\n  \\n     /*this works because container is set to relative*/\\n     position: absolute;\\n    top: 30%; \\n    right: 70%;\\n    display: none; /* show */\\n    -webkit-transform: translateX(110%);\\n            transform: translateX(110%);\\n    transition: all 1s ease-in-out;\\n  }\\n\\n .featured-container:hover .featured-store-link{\\n    /*transform: translateX(0%); */\\n    display: block;\\n  }\"","module.exports = \"<!--p\\n  product-list works!\\n</p-->\\n\\n<script\\n  src=\\\"https://code.jquery.com/jquery-2.2.4.min.js\\\"\\n  integrity=\\\"sha256-BbhdlvQf/xTY9gja0Dq3HiwQF8LaCRTXxZKRutelT44=\\\"\\n  crossorigin=\\\"anonymous\\\"></script>\\n\\n \\n\\n  <div class=\\\"container-fluid background-products \\\">\\n      \\n      <div class=\\\"row justify-content-center  bg-secondary\\\">\\n          <div class=\\\"col col-sm-12  col-md-12  col-lg-12 text-center bg-warning pl-0 pr-0\\\">\\n              \\n              <ngb-carousel *ngIf=\\\"images\\\">\\n                  <ng-template ngbSlide>\\n                    <img class=\\\"carousel-image\\\" [src]=\\\"images2[0]\\\" alt=\\\"Random first slide\\\">\\n                    <div class=\\\"carousel-caption\\\">\\n                      <h3></h3>\\n                      <p></p>\\n                    </div>\\n                  </ng-template>\\n                  <ng-template ngbSlide>\\n                    <img class=\\\"carousel-image\\\" [src]=\\\"images2[1]\\\" alt=\\\"Random second slide\\\">\\n                    <div class=\\\"carousel-caption\\\">\\n                      <h3></h3>\\n                      <p></p>\\n                    </div>\\n                  </ng-template>\\n                  <ng-template ngbSlide>\\n                    <img class=\\\"carousel-image\\\" [src]=\\\"images2[2]\\\" alt=\\\"Random third slide\\\">\\n                    <div class=\\\"carousel-caption\\\">\\n                      <h3></h3>\\n                      <p></p>\\n                    </div>\\n                  </ng-template>\\n                </ngb-carousel>  \\n\\n         </div>\\n        \\n      </div>   \\n      \\n      <!--div class=\\\"row d-flex justify-content-center\\\">\\n          \\n           <div *ngFor=\\\"let product of listProducts\\\" class=\\\"col col-sm-10  col-md-8  col-lg-6  \\\">\\n              {{product.name}}\\n            </div>\\n      </div>--> \\n      \\n      <div class=\\\"row justify-content-center\\\">\\n          <!--single product-->\\n            <div *ngFor=\\\"let product of listProducts\\\" class=\\\"col-9  col-sm-4 col-md-3 col-lg-3 text-center\\\"> \\n              <div class=\\\"featured-container p-2 mt-2 text-center justify-content-center\\\">\\n                  <a href=\\\"#\\\" [routerLink]=\\\"['/product-detail']\\\" >\\n                    <img src=\\\"{{product.urlImage || '../../assets/logo_silver.png'}}\\\" alt=\\\"product\\\" class=\\\"img-fluid\\\" >\\n                    <a href=\\\"#\\\" [routerLink]=\\\"['/product-detail',  product.id]\\\" class=\\\"featured-store-link text-capitalize\\\">Add to cart</a>\\n             \\n                  </a>\\n                <!--span class=\\\"featured-search-icon\\\" data-toggle=\\\"model\\\" data-target=\\\"#productModal\\\"><i class=\\\"fas fa-search\\\"></i></span-->\\n              </div>\\n              <h6 class=\\\"text-capitalize text-center my-2\\\">{{product.name}}</h6>\\n              <h6 class=\\\"text-center\\\">\\n                <span class=\\\"text-muted old-price mx-2\\\">$ {{product.price}}</span>\\n                <span>$0</span>\\n              </h6>\\n\\n              <ngb-rating  [(ngModel)]=\\\"product.id\\\" [(rate)]=product.id   >\\n                  <ng-template let-fill=\\\"fill\\\" let-index=\\\"index\\\">\\n                    <span class=\\\"star\\\" [class.filled]=\\\"fill === 100\\\" >&#9733;</span>\\n                  </ng-template>\\n                </ngb-rating>\\n\\n                <hr>\\n                <pre>Rate: <b>{{currentRate}}</b></pre>\\n            </div>\\n       </div>    <!--row-->          \\n      \\n      \\n  </div> \\n\\n  \\n\\n\\n  \\n\"","import { Component, OnInit } from '@angular/core';\nimport { NgbModule, NgbRatingConfig } from '@ng-bootstrap/ng-bootstrap';\nimport { Product } from 'src/app/_models/product';\nimport { AlertifyService } from 'src/app/services/alertify.service';\nimport { ProductService } from 'src/app/services/product.service';\nimport { UserService } from 'src/app/services/user.service';\n\n@Component({\n  selector: 'app-product-list',\n  templateUrl: './product-list.component.html',\n  styleUrls: ['./product-list.component.css']\n})\n\n\nexport class ProductListComponent implements OnInit {\n\n  images = [1, 2, 3].map(() => 'https://picsum.photos/900/500?random&t=${Math.random()}');\n\n  images2 = ['../../../assets/couch1.jpg', '../../../assets/banner_phones.jpg', '../../../assets/deco1.jpg'];\n\n   listProducts: Product[];\n   currentRate = 8;\n  constructor(private alertify: AlertifyService, private productService: ProductService,  private config: NgbRatingConfig,\n      private userService: UserService) {\n    config.max = 5;\n    // config.readonly = true;\n  }\n\n  ngOnInit() {\n    this.getProductList();\n  }\n\n  loggedAsAdmin() {\n    return this.userService.loggedAsAdmin();\n  }\n\n  getProductList () {\n    this.productService.getProductList().subscribe((products: Product[]) => {\n      this.listProducts = products;\n    }, error => {\n      this.alertify.error(error);\n    }\n    );\n  }\n\n}\n","module.exports = \"\\n.container-form {\\n    padding: 1em 3em 2em 3em;\\n    margin: 0em auto;\\n    background-color: #F9F8F8 ;\\n    border-radius: 3px* 1.4;\\n    box-shadow: 0px 3px 10px -2px rgba(0,0,0,0.2);\\n  }\\n  .text-blue {\\n    color: var(--lightblue)!important;\\n}\\n  .row-register{\\n    background-color: #2A4480;\\n}\\n  .form-control {\\n    margin-top: 0px !important;\\n\\n}\\n  .form-label2 {\\n    margin-top: 5px !important;\\n    margin-bottom: 1px ;\\n\\n}\\n\"","module.exports = \"\\n\\n <div class=\\\"container \\\">\\n   \\n    <div class=\\\"row justify-content-center  row-register2\\\">\\n        <div class=\\\"col col-sm-10  col-md-8  col-lg-6 justify-content-center\\\">\\n\\n           <form class=\\\"container container-form\\\" [formGroup]=\\\"registerForm\\\" (ngSubmit)=\\\"register()\\\">\\n\\n                <!--div class=\\\"row justify-content-center text-center \\\">\\n                     <div class=\\\"col col-sm-6 justify-content-center py-5\\\">Register</div>\\n                 </div-->\\n\\n                <div class=\\\"form-group\\\">   \\n                        <h4 class=\\\"text-blue\\\"> Register</h4>   \\n                    </div>  \\n            \\n            <div class=\\\"form-group  \\\">              \\n                    <label for=\\\"firstname \\\" class=\\\"form-label\\\">Firts Name</label>\\n                     <input  \\n                     formControlName=\\\"firstname\\\" \\n                     [ngClass]=\\\"{'is-invalid': registerForm.get('firstname').errors && registerForm.get('firstname').touched}\\\" \\n                     type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"firstname\\\" placeholder=\\\"name@example.com\\\" >\\n\\n\\n                     <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('firstname').touched && registerForm.get('firstname').hasError('required')\\\">First name is requiered</div>\\n\\n\\n              </div>\\n            <div class=\\\"form-group\\\">\\n                  <label for=\\\"lastname\\\">Last Name</label>\\n                  <input  formControlName=\\\"lastname\\\" \\n                  [ngClass]=\\\"{'is-invalid': registerForm.get('lastname').errors && registerForm.get('lastname').touched}\\\" \\n                   type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"lastname\\\" placeholder=\\\"Last name\\\">\\n                \\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('lastname').touched && registerForm.get('lastname').hasError('required')\\\">Last name is requiered</div>\\n\\n                </div>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"email\\\">Email address</label>\\n                <input formControlName=\\\"email\\\" \\n                [ngClass]=\\\"{'is-invalid': registerForm.get('email').errors && registerForm.get('email').touched}\\\" \\n                 type=\\\"email\\\" class=\\\"form-control\\\" id=\\\"email\\\" placeholder=\\\"name@example.com\\\">\\n                <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('email').touched && registerForm.get('email').hasError('required') ;else content\\\">Email is requiered</div>\\n                <ng-template #content>\\n                        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('email').errors\\\">Email is not Valid</div>\\n\\n                    </ng-template>\\n            </div>\\n              <div class=\\\"form-group\\\">\\n                  <label for=\\\"password\\\">Create a Password</label>\\n                  <input formControlName=\\\"password\\\" \\n                  [ngClass]=\\\"{'is-invalid': registerForm.get('password').errors\\n                  && registerForm.get('password').touched}\\\"\\n                   type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"password\\\" placeholder=\\\"*********\\\">\\n\\n                  <div class=\\\"invalid-feedback\\\" *ngIf=\\\"registerForm.get('password').hasError('required')\\n      && registerForm.get('password').touched\\\">Password is required</div>\\n\\n                </div>\\n                <div class=\\\"form-group\\\">\\n                    <label for=\\\"confirmPassword\\\">Confirm the Password</label>\\n                    <input formControlName=\\\"confirmPassword\\\" \\n                    [ngClass]=\\\"{'is-invalid': registerForm.get('confirmPassword').errors\\n                    && registerForm.get('confirmPassword').touched\\n                      || registerForm.get('confirmPassword').touched\\n                      && registerForm.hasError('mismatch') }\\\"\\n                    type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"confirmPassword\\\" placeholder=\\\"*********\\\">\\n                 \\n                    <div class=\\\"invalid-feedback\\\" \\n                    *ngIf=\\\"registerForm.get('confirmPassword').hasError('required')\\n                    && registerForm.get('confirmPassword').touched\\\">Confirm password is required</div>\\n                \\n                    <div class=\\\"invalid-feedback\\\" \\n                    *ngIf=\\\"registerForm.hasError('mismatch')\\n                    && registerForm.get('confirmPassword').touched\\\">Passwords must match</div>\\n                </div> \\n                <div class=\\\"form-group\\\">\\n                   <span>By clicking Create Account, you acknowledge you have read and agreed to our Terms of Use and Privacy Policy. </span>  \\n                </div>\\n                <div class=\\\" text-center\\\">  \\n                     <button class=\\\"btn btn-success\\\" [disabled]=\\\"!registerForm.valid\\\" type=\\\"submit\\\">Create Account</button>\\n                    <!--button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Create Account</button>-->\\n                </div>\\n          </form>\\n        </div>\\n       \\n    </div>\\n  </div>\\n\\n\\n  \\n  \"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\nimport { AlertifyService } from '../services/alertify.service';\nimport { User } from '../_models/user';\nimport { UserService } from '../services/user.service';\n import { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.css']\n})\nexport class RegisterComponent implements OnInit {\n\n  user: User;\n  registerForm: FormGroup;\n  emailPattern = '^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$';\n\n\n  constructor( private alertify: AlertifyService,\n    private fb: FormBuilder , private userService: UserService,  private router: Router) { }\n\n  ngOnInit() {\n     this.createRegisterForm();\n    /*this.registerForm = new FormGroup({\n\n      firstname: new FormControl('', Validators.required ),\n      lastname: new FormControl('', Validators.required ),\n      email: new FormControl('', Validators.required ),\n\n      password: new FormControl('', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]),\n      confirmPassword: new FormControl('', Validators.required)\n    }, this.passwordMatchValidator); */ // 123 passwordMatchValidator\n\n\n  }\n\n  createRegisterForm() {\n    this.registerForm = this.fb.group({\n      firstname: ['', Validators.required],\n      lastname: ['', Validators.required],\n        email: ['', [Validators.required, Validators.pattern(this.emailPattern)]],\n      password: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(8)]],\n      confirmPassword: ['', Validators.required]\n    }, {validator: this.passwordMatchValidator} );\n  }\n\n  register () {\n    if (this.registerForm.valid) {\n      // move the vslues from this.registerForm.value to {}\n      this.user = Object.assign({}, this.registerForm.value) ;\n      this.userService.register(this.user).subscribe( () => {\n        this.alertify.success('Registration successful');\n      }, error => {\n        this.alertify.error(error);\n      }, () => { // third part , complete, we nee to redirect the user once they have register\n          this.userService.login(this.user).subscribe ( () => {\n                this.router.navigate(['/product-list']);\n                console.log('login/member');\n              }\n          );\n      });\n    }\n  }\n\n  // 123\n  passwordMatchValidator(g: FormGroup) {\n    return g.get('password').value === g.get('confirmPassword').value ? null : {'mismatch': true};\n  }\n\n\n}\n","import { Routes } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { RegisterComponent } from './register/register.component';\nimport { ProductListComponent } from './products/product-list/product-list.component';\nimport { LoginComponent } from './login/login.component';\nimport { ValueComponent } from './value/value.component';\nimport { ProductCreateComponent } from './products/product-create/product-create.component';\nimport { ProductDetailComponent } from './products/product-detail/product-detail.component';\nimport { ProductEditComponent } from './products/product-edit/product-edit.component';\nimport { ProductListEditComponent } from './products/product-list-edit/product-list-edit.component';\n\nexport const appRoutes: Routes = [\n    { path: 'home', component: HomeComponent },\n    { path: 'register', component: RegisterComponent },\n    { path: 'login', component: LoginComponent },\n    { path: 'product-create', component: ProductCreateComponent },\n    { path: 'product-list', component: ProductListComponent },\n    { path: 'product-detail', component: ProductDetailComponent },\n    { path: 'product-detail/:id', component: ProductDetailComponent },\n    { path: 'product-edit/:id', component: ProductEditComponent },\n    { path: 'product-list-edit', component: ProductListEditComponent },\n    { path: 'values', component: ValueComponent },\n    { path: '**', redirectTo: 'home', pathMatch: 'full' }\n];\n","import { Injectable } from '@angular/core';\ndeclare let alertify: any;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AlertifyService {\n\nconstructor() { }\n    confirm(message: string, okCallback: () => any) {\n      alertify.confirm(message, function(e) {\n        if (e) {\n          okCallback();\n        } else {}\n      }\n      );\n    }\n\n    success(message: string) {\n      alertify.success(message);\n    }\n\n    error(message: string) {\n      alertify.error(message);\n    }\n\n    warning(message: string) {\n      alertify.warning(message);\n    }\n\n    message(message: string) {\n      alertify.message(message);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Category } from '../_models/category';\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  baseUrl =  environment.apiUrl +  'categories/';\n  constructor(private http: HttpClient) { }\n\n  getCategoryList() {\n    return this.http.get(this.baseUrl );\n  }\n\n   // alternative with observable\n  getCategoryListObs(): Observable<Category[]>   {\n    return this.http.get<Category[]>(this.baseUrl );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpInterceptor, HttpRequest,  HttpHandler, HttpEvent, HttpErrorResponse, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n\n // interceps the differents types of error : 401  , typo = object , etc\n@Injectable()\nexport class ErrorInterceptor implements HttpInterceptor {\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        return next.handle(req).pipe (\n            catchError ( error => {\n                    if (error  instanceof HttpErrorResponse) {\n                         // for the login where the user is unauthorize\n                        if (error.status === 401) {\n                            return throwError(error.statusText);\n                        }\n                        const applicationError = error.headers.get('Application-Error');\n                        if (applicationError) {\n                            console.error(applicationError);\n                            return throwError(applicationError);\n                        }\n\n                        const serverError = error.error;\n                        let modalStateErrors = '';\n                        if (serverError && typeof serverError === 'object') {\n                            for (const key in serverError) {\n                                if (serverError[key]) {\n                                    modalStateErrors += serverError[key] + '\\n';\n                                }\n                            }\n                        }\n                        return throwError(modalStateErrors || serverError || 'Server Error');\n                    }\n            })\n        );\n    }\n}\n\n\nexport const ErrorInterceptorProvider = {\n    provide : HTTP_INTERCEPTORS,\n    useClass:  ErrorInterceptor,\n    multi: true // ADDED TO INTERCEPTROR\n// tslint:disable-next-line:semicolon\n}\n","import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { Product } from '../_models/product';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  baseUrl =  environment.apiUrl +  'products/';\n\nconstructor(private http: HttpClient) { }\n\n  createProduct(model: any) {\n    return this.http.post(this.baseUrl + 'create', model);\n  }\n\n  getProductList() {\n    return this.http.get(this.baseUrl );\n  }\n\n  // alternative with observable\n  getProductListObs(): Observable<Product[]>   {\n    return this.http.get<Product[]>(this.baseUrl );\n  }\n\n  // product/1\n  getProduct(id): Observable<Product> {\n    return this.http.get<Product>(this.baseUrl + id);\n  }\n}\n\n\n","import { Injectable } from '@angular/core';\nimport { User } from '../_models/user';\nimport { environment } from 'src/environments/environment';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { HttpClient } from '@angular/common/http';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  // 'http://localhost:5000/api/'\n  baseUrl =  environment.apiUrl +  'Users/';\n  // baseUrl =  environment.apiUrl +  'Auth/';\n\n  jwtHelper = new JwtHelperService();\n  decodedToken: any;\n  currentUser: User;\n\nconstructor(private http: HttpClient) { }\n\nregister(user: User) {\n  return this.http.post(this.baseUrl + 'register' , user);\n}\n\nloggedIn() {\n  // if token is not expired the user is logged in\n  const token = localStorage.getItem('token');\n  return !this.jwtHelper.isTokenExpired(token);\n}\n\nloggedAsAdmin() {\n  // if token is not expired the user is logged in\n\n\n  const token = localStorage.getItem('token');\n  if (!this.jwtHelper.isTokenExpired(token)) {\n     // user is logged in, now check if user is Admin\n     const data = JSON.parse(localStorage.getItem('user'));\n     if (data != null) {\n         if (data['isAdmin'] === 1) {\n          // console.log('userr --->isAdmin' );\n            return true;\n        } else {\n          // console.log(data['isAdmin']);\n          return false;\n        }\n     } else {\n       return false;\n     }\n  }\n}\n\n// 2 objects are recieved, token and user\nlogin(model: any) {\n  console.log(model);\n  return this.http.post(this.baseUrl + 'login', model)\n  .pipe(\n     map((response: any) => {\n         const user = response;\n         if (user) {\n           localStorage.setItem('token', user.token);\n           localStorage.setItem('user', JSON.stringify(user.user));\n           this.decodedToken = this.jwtHelper.decodeToken(user.token);\n           this.currentUser = user.user;\n         }\n     })\n  );\n}\n\n}\n","module.exports = \"\"","module.exports = \"<p *ngFor=\\\"let value of values\\\" >\\n   {{value}} \\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-value',\n  templateUrl: './value.component.html',\n  styleUrls: ['./value.component.css']\n})\nexport class ValueComponent implements OnInit {\n  values: any;\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    this.getValues();\n  }\n\n  getValues() {\n    this.http.get('http://localhost:5000/api/values').subscribe(response => {\n      this.values = response;\n    }, error => {\n      console.log(error);\n    });\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: 'http://localhost:5000/api/'\n\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}